1. Revising the Select Query I

Query all columns for all American cities in CITY with populations larger than 100000. The CountryCode for America is USA.

SELECT *
FROM CITY
WHERE
    COUNTRYCODE = 'USA'
    AND POPULATION > 100000;

2. Revising the Select Query II

Query the names of all American cities in CITY with populations larger than 120000. The CountryCode for America is USA.

select name from city
where CountryCode ='USA'
and population >120000;

3. Select All

Query all columns (attributes) for every row in the CITY table.

SELECT * FROM CITY;


4. Select By ID

Query all columns for a city in CITY with the ID 1661.

SELECT * FROM CITY
WHERE ID = 1661;

5. Japanese Cities' Attributes

Query all attributes of every Japanese city in the CITY table. The COUNTRYCODE for Japan is JPN.

SELECT* FROM CITY
WHERE COUNTRYCODE='JPN';

6. Weather Observation Station 1

Query a list of CITY and STATE from the STATION table.

7. Weather Observation Station 2

Query a list of CITY and STATE from the STATION table.

SELECT CITY,STATE FROM STATION;

8. Weather Observation Station 3


Query a list of CITY names from STATION with even ID numbers only. 
You may print the results in any order, but must exclude duplicates from your answer.

SELECT DISTINCT CITY FROM STATION
WHERE (id % 2) = 0;

9. Weather Observation Station 4

Let  be the number of CITY entries in STATION, and let  be the number of distinct CITY names in STATION; 
query the value of  from STATION. In other words, 
find the difference between the total number of CITY entries in the table and the number of distinct CITY entries in the table.

SELECT COUNT(CITY)-COUNT(DISTINCT CITY) FROM STATION ;

10. Weather Observation Station 6

Query the list of CITY names starting with vowels (i.e., a, e, i, o, or u) from STATION. 
Your result cannot contain duplicates.

SELECT DISTINCT CITY FROM STATION WHERE left(CITY,1) IN ('a','i','e','o','u')

11. Weather Observation Station 7

Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot contain duplicates.


SELECT DISTINCT CITY FROM STATION WHERE right(CITY,1) IN ('a','i','e','o','u')

12. Weather Observation Station 8

Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u) 
as both their first and last characters. Your result cannot contain duplicates.

SELECT DISTINCT CITY FROM STATION 
WHERE left(CITY,1)
AND right(CITY,1) IN ('a','i','e','o','u')

13. Weather Observation Station 9

Query the list of CITY names from STATION that do not start with vowels. Your result cannot contain duplicates.

SELECT DISTINCT CITY FROM STATION 
WHERE LEFT(CITY,1) not IN ('a','i','e','o','u')

14. Weather Observation Station 10

Query the list of CITY names from STATION that do not end with vowels. Your result cannot contain duplicates.

SELECT DISTINCT CITY FROM STATION WHERE right(CITY,1) NOT IN ('a','i','e','o','u')

15. Weather Observation Station 11

Query the list of CITY names from STATION that either do not start with vowels or do not end with vowels. 
Your result cannot contain duplicates

SELECT DISTINCT CITY FROM STATION 
WHERE left(CITY,1)
or right(CITY,1) not IN ('a','i','e','o','u')

16. Weather Observation Station 12

Query the list of CITY names from STATION that do not start with vowels and do not end with vowels. 
Your result cannot contain duplicates.

SELECT DISTINCT CITY FROM STATION 
WHERE left(CITY,1)
and right(CITY,1) not IN ('a','i','e','o','u')

17. Higher Than 75 Marks

Query the Name of any student in STUDENTS who scored higher than  Marks. Order your output by the last three characters of each name. 
If two or more students both have names ending in the same last three characters (i.e.: Bobby, Robby, etc.), secondary sort them by ascending ID.

SELECT NAME FROM STUDENTS 
WHERE MARKS > 75 
ORDER BY RIGHT(NAME, 3), ID ASC;

18. Employee Names

Write a query that prints a list of employee names (i.e.: the name attribute) from the Employee table in alphabetical order.

SELECT NAME FROM EMPLOYEE
order by NAME;

19. Employee Salaries

Write a query that prints a list of employee names (i.e.: the name attribute) 
for employees in Employee having a salary greater than  per month who have been employees for less than  months. 
Sort your result by ascending employee_id.

SELECT name FROM Employee
WHERE salary > 2000 AND months < 10
ORDER BY employee_id;