1. Type of Triangle
Write a query identifying the type of each record in the TRIANGLES table using its three side lengths. Output one of the following statements for each record in the table:

Equilateral: It's a triangle with 3 sides of equal length.
Isosceles: It's a triangle with 2 sides of equal length.
Scalene: It's a triangle with 3 sides of differing lengths.
Not A Triangle: The given values of A, B, and C don't form a triangle.
	
Answer:
select if(A+B<=C or B+C<=A or A+C<=B,'Not A Triangle',
if(A=B and B=C,'Equilateral',
if(A=B or B=C or A=C,'Isosceles','Scalene'))) 
from TRIANGLES as T;


2.The PADS
Generate the following two result sets:

Query an alphabetically ordered list of all names in OCCUPATIONS, immediately followed by the first letter of each profession as a parenthetical (i.e.: enclosed in parentheses). For example: AnActorName(A), ADoctorName(D), AProfessorName(P), and ASingerName(S).
Query the number of ocurrences of each occupation in OCCUPATIONS. Sort the occurrences in ascending order, and output them in the following format:

There are a total of [occupation_count] [occupation]s.
where [occupation_count] is the number of occurrences of an occupation in OCCUPATIONS and [occupation] is the lowercase occupation name. If more than one Occupation has the same [occupation_count], they should be ordered alphabetically.

Note: There will be at least two entries in the table for each type of occupation.

Answer:
SELECT concat(NAME,concat("(",concat(LEFT(OCCUPATION,1),")"))) 
FROM OCCUPATIONS 
ORDER BY NAME ASC;
SELECT "There are a total of ", count(OCCUPATION), concat(lower(occupation),"s.") 
FROM OCCUPATIONS 
GROUP BY OCCUPATION 
ORDER BY count(OCCUPATION), OCCUPATION ASC

3. Binary Tree Nodes

You are given a table, BST, containing two columns: N and P, where N represents the value of a node in Binary Tree, and P is the parent of N.

Write a query to find the node type of Binary Tree ordered by the value of the node. Output one of the following for each node:

Root: If node is root node.
Leaf: If node is leaf node.
Inner: If node is neither root nor leaf node.

Answer:
SELECT N, 
CASE WHEN P is NULL then 'Root' 
WHEN N in (select P from BST) then 'Inner' 
ELSE 'Leaf' end as Node from BST 
ORDER by N;

4. New Companies

